openapi: 3.0.0
info:
  title: Trip Planner API
  description: API for managing and searching trips
  version: 1.0.0
  contact:
    name: Support
    email: support@example.com
    url: https://example.com
servers:
  - url: http://localhost:3000
    description: Local server
paths:
  /api/auth/login:
    post:
      summary: Authenticate and get a JWT token
      description: Authenticates the user with provided credentials and returns a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: admin
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoidXNlcm5hbWUiLCJpYXQiOjE2NzcwMzEyNzQsImV4cCI6MTY3NzA2OTk3NH0.-mNnO4vHldYXnT-6m2yDbt9vEYO0pTtImHrWf88deWc"
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid credentials"

  /api/trips:
    get:
      summary: Search for trips
      description: Returns a list of trips filtered by origin, destination, and sorted by specified field.
      parameters:
        - name: origin
          in: query
          required: false
          schema:
            type: string
            example: "ATL"
        - name: destination
          in: query
          required: false
          schema:
            type: string
            example: "LAX"
        - name: sort_by
          in: query
          required: false
          schema:
            type: string
            example: "cost"
      responses:
        '200':
          description: A list of sorted trips
          content:
            application/json:
              schema:
                type: object
                properties:
                  sortedTrips:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "1"
                        origin:
                          type: string
                          example: "A"
                        destination:
                          type: string
                          example: "B"
                        cost:
                          type: number
                          example: 100
                        duration:
                          type: number
                          example: 2
                  bestMatch:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1"
                      origin:
                        type: string
                        example: "A"
                      destination:
                        type: string
                        example: "B"
                      cost:
                        type: number
                        example: 100
                      duration:
                        type: number
                        example: 2
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error during trip search"

    post:
      summary: Save a new trip
      description: Saves a new trip to the database.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                origin:
                  type: string
                  example: "A"
                destination:
                  type: string
                  example: "B"
                cost:
                  type: number
                  example: 100
                duration:
                  type: number
                  example: 2
      responses:
        '201':
          description: Trip saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "1"
                  origin:
                    type: string
                    example: "A"
                  destination:
                    type: string
                    example: "B"
                  cost:
                    type: number
                    example: 100
                  duration:
                    type: number
                    example: 2
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid trip data"

  /api/trips/saved:
    get:
      summary: Get all saved trips
      description: Returns a list of all saved trips.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of saved trips
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "1"
                    origin:
                      type: string
                      example: "A"
                    destination:
                      type: string
                      example: "B"
                    cost:
                      type: number
                      example: 100
                    duration:
                      type: number
                      example: 2
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"

  /api/trips/{id}:
    get:
      summary: Get a specific trip by ID
      description: Returns a trip by its ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the trip
      responses:
        '200':
          description: Trip found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "1"
                  origin:
                    type: string
                    example: "A"
                  destination:
                    type: string
                    example: "B"
                  cost:
                    type: number
                    example: 100
                  duration:
                    type: number
                    example: 2
        '404':
          description: Trip not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Trip not found"

    delete:
      summary: Delete a specific trip by ID
      description: Deletes a trip by its ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the trip to delete
      responses:
        '200':
          description: Trip deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Trip deleted successfully"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid trip ID"
        '404':
          description: Trip not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Trip not found"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Trip:
      type: object
      properties:
        id:
          type: string
          example: "1"
        origin:
          type: string
          example: "A"
        destination:
          type: string
          example: "B"
        cost:
          type: number
          example: 100
        duration:
          type: number
          example: 2
